# -*- coding: utf-8 -*-
"""Kepler_01

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Bg9F-8wVfTbkX2xKha2FUJIo_6rcoks0
"""

import pandas as pd
path = "/content/kepler_data.csv"
OEC = pd.read_csv(path)
OEC.head()

label = "koi_disposition"
features_to_use = ["koi_score","koi_fpflag_nt","koi_fpflag_ss","koi_fpflag_co","koi_fpflag_ec","koi_period","koi_period_err1","koi_period_err2","koi_time0bk","koi_time0bk_err1","koi_time0bk_err2","koi_impact","koi_impact_err1","koi_impact_err2","koi_duration","koi_duration_err1","koi_duration_err2","koi_depth","koi_depth_err1","koi_depth_err2","koi_prad","koi_prad_err1","koi_prad_err2","koi_teq","koi_insol","koi_insol_err1","koi_insol_err2","koi_model_snr","koi_tce_plnt_num","koi_steff","koi_steff_err1","koi_steff_err2","koi_slogg","koi_slogg_err1","koi_slogg_err2","koi_srad","koi_srad_err1","koi_srad_err2","ra","dec","koi_kepmag"]

#setup variables for the labels and data to keep them separate
y = OEC[label]
X = OEC[features_to_use]

X.info(verbose = True)

X.describe()

# or To create an ML algorithm to classify the planets based on the "koi_disposition" column, we'll follow these steps:
#Data Preparation: Load the data and perform necessary preprocessing steps.
#Feature Selection: Select relevant features for training the model.
#Model Training: Train a machine learning model on the selected features.
#Model Evaluation: Evaluate the performance of the trained model.
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report

# Step 1: Load the data
file_path = "/content/kepler_data.csv"  # Update the file path
kepler_data = pd.read_csv(file_path)

# Step 2: Preprocess the data
# Drop irrelevant columns and handle missing values if needed
kepler_data.dropna(inplace=True)  # Drop rows with missing values
X = kepler_data.drop(columns=['koi_disposition', 'koi_pdisposition', 'kepoi_name', 'kepler_name', 'koi_tce_delivname'])
y = kepler_data['koi_disposition']

# Step 3: Encode the target labels
label_encoder = LabelEncoder()
y = label_encoder.fit_transform(y)

# Step 4: Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 5: Train a machine learning model (Random Forest Classifier)
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Step 6: Evaluate the model
y_pred = model.predict(X_test)
print(classification_report(y_test, y_pred, target_names=label_encoder.classes_))

